<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="organ">
	<!-- Use type aliases to avoid typing the full classname every time. -->
	<resultMap id="OrganResult" type="organ">
		<result property="o_no" column="o_no"/>
		<result property="o_email" column="o_email"/>
		<result property="o_passwd" column="o_passwd"/>
		<result property="o_license" column="o_license"/>
		<result property="o_oname" column="o_oname"/>
		<result property="o_name" column="o_name"/>
		<result property="o_tel" column="o_tel"/>
		<result property="o_addr" column="o_addr"/>
		<result property="o_category" column="o_category"/>
		<result property="o_reg_date" column="o_reg_date"/>
		<result property="o_out_date" column="o_out_date"/>
		<result property="o_del_yn" column="o_del_yn"/>
		<result property="o_ok_xyn" column="o_ok_xyn"/>		
		<result property="no" column="no"/>
		<result property="post1" column="post1"/>
		<result property="post2" column="post2"/>
		<result property="addr1" column="addr1"/>
		<result property="addr2" column="addr2"/>
		<result property="o_tel1" column="o_tel1"/>
		<result property="o_tel2" column="o_tel2"/>
		<result property="o_tel3" column="o_tel3"/>
	</resultMap>
	
	<select id="selectNum" resultType="Integer">
		select nvl(min(o_no),0)-1 from organ
	</select>
	
	<insert id="insertOrgan" parameterType="organ">
		insert into organ values(#{o_no},#{o_email},#{o_passwd},#{o_license},#{o_oname},#{o_name},#{o_tel},#{o_addr},#{o_category},sysdate,null,'n','x')
	</insert>
	
	<select id="selectOno" parameterType="String" resultType="Integer">
		select nvl(max(o_no),0) as o_no from organ where o_email=#{o_email} and o_del_yn='y'
	</select>
	
	<update id="insertReOrgan" parameterType="organ">
		update organ set o_passwd=#{o_passwd},o_license=#{o_license},o_oname=#{o_oname},o_name=#{o_name},o_tel=#{o_tel},o_addr=#{o_addr},o_category=#{o_category},o_reg_date=sysdate,o_del_yn='n' where o_no=#{o_no}
	</update>
	
	<select id="o_emailChk" parameterType="String" resultType="Integer">
		select count(*) from (select o_email as email from organ where o_del_yn='n' union select m_email from member where m_del_yn='n') a where a.email=#{o_email}
	</select>
	
	<select id="selectOname" parameterType="Integer" resultType="String">
		select o_oname from organ where o_no=#{no}
	</select>
	
	<select id="onameChk" parameterType="organ" resultType="String">
		(select o_oname from organ where o_oname=#{o_oname} and o_no!=#{no} and o_del_yn='n' union select m_nick from member where m_nick=#{o_oname} and m_del_yn='n') union (select o_oname from organ where o_oname=#{o_oname} and o_no=#{no} and o_del_yn='n' union select m_nick from member where m_nick=#{o_oname} and m_del_yn='n')
	</select>
	
	<select id="selectOrgan" parameterType="Integer" resultMap="OrganResult">
		select * from organ where o_no=#{o_no} and o_del_yn='n'
	</select>
	
	<select id="selectOrgan_addr_tel" parameterType="Integer" resultMap="OrganResult">
		select o.*, (substr(o_addr, instr(o_addr, '(', 1, 1)+1, 3)) as post1, (substr(o_addr, instr(o_addr, '-', 1, 1)+1, 3)) as post2, regexp_substr(o_addr, '[^ ]+', 1, 2)||' '||regexp_substr(o_addr, '[^ ]+', 1, 3)||' '||regexp_substr(o_addr, '[^ ]+', 1, 4)||' '||regexp_substr(o_addr, '[^ ]+', 1, 5) as addr1, substr(o_addr, (length(regexp_substr(o_addr, '[^ ]+', 1, 2)||' '||regexp_substr(o_addr, '[^ ]+', 1, 3)||' '||regexp_substr(o_addr, '[^ ]+', 1, 4)||' '||regexp_substr(o_addr, '[^ ]+', 1, 5))+12), 1000) as addr2, 
		(regexp_substr(o_tel, '[^-]+', 1, 1)) as o_tel1, (regexp_substr(o_tel, '[^-]+', 1, 2)) as o_tel2, (regexp_substr(o_tel, '[^-]+', 1, 3)) as o_tel3 from organ o where o_no=#{o_no} and o_del_yn='n'
	</select>
	
	<update id="updateOrgan" parameterType="organ">
		update organ set o_passwd=#{o_passwd}, o_oname=#{o_oname}, o_name=#{o_name}, o_tel=#{o_tel}, o_addr=#{o_addr}, o_category=#{o_category}, o_del_yn='n' where o_no=#{o_no}
	</update>
	
	<select id="selectOk" parameterType="String" resultType="String">
		select o_ok_xyn from organ where o_no=#{o_no}
	</select>
	
	<update id="XupdateOrgan" parameterType="organ">
		update organ set o_passwd=#{o_passwd}, o_license=#{o_license}, o_oname=#{o_oname}, o_name=#{o_name}, o_tel=#{o_tel}, o_addr=#{o_addr}, o_category=#{o_category}, o_del_yn='n', o_ok_xyn='x' where o_no=#{o_no}
	</update>
	
	<select id="deletePwdChk" parameterType="Integer" resultType="String">
		select o_passwd from organ where o_no = #{o_no}
	</select>
	
	<update id="deleteOrgan" parameterType="Integer">
		update organ set o_del_yn='y', o_out_date=sysdate, o_ok_xyn='x' where o_no=#{o_no} and o_del_yn='n'
	</update>

	<select id="organTotal" parameterType="String"  resultType="Integer">
		select count(*) from organ where o_del_yn='n'
		<if test='xyn != "all"'>
			<if test='xyn == "x"'>
				and o_ok_xyn='x'
			</if>
			<if test='xyn == "y"'>
				and o_ok_xyn='y'
			</if>
			<if test='xyn == "n"'>
				and o_ok_xyn='n'
			</if>
		</if>
	</select>

	<select id="organAll" parameterType="organ" resultMap="OrganResult">
		select * from (select rownum rn, a.* from (select o.* from organ o where o_del_yn='n'
		<if test='xyn != "all"'>
			<if test='xyn == "x"'>
				and o_ok_xyn='x'
			</if>
			<if test='xyn == "y"'>
				and o_ok_xyn='y'
			</if>
			<if test='xyn == "n"'>
				and o_ok_xyn='n'
			</if>
		</if>
		order by o_no) a) where rn between #{startRow} and #{endRow}
	</select>
	
	<select id="selectO_addrByO_no" resultType="String" parameterType="int">
		SELECT SUBSTR(O_ADDR,10) o_addr FROM ORGAN WHERE O_NO = #{o_no}
	</select>
	
	<select id="selectAll" resultMap="OrganResult">
		select * from organ where o_del_yn='n'
	</select>
	
	<update id="ok_y_update" parameterType="Integer">
		update organ set o_ok_xyn='y' where o_no=#{o_no} and o_del_yn='n'
	</update>
	
	<update id="ok_n_update" parameterType="Integer">
		update organ set o_ok_xyn='n' where o_no=#{o_no} and o_del_yn='n'
	</update>
	
</mapper>