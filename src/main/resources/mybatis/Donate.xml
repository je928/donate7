<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="donate">
	<!-- Use type aliases to avoid typing the full classname every time. -->
	<resultMap id="DonateResult" type="donate">
		<result property="d_no" column="d_no" />
		<result property="d_title" column="d_title" />
		<result property="d_member" column="d_member" />
		<result property="d_reg_date" column="d_reg_date" />
		<result property="d_content" column="d_content" />
		<result property="d_plan" column="d_plan" />
		<result property="d_amount" column="d_amount" />
		<result property="d_bank" column="d_bank" />
		<result property="d_account" column="d_account" />
		<result property="d_img" column="d_img" />
		<result property="d_approve" column="d_approve" />
		<result property="d_start_date" column="d_start_date" />
		<result property="d_end_date" column="d_end_date" />
		<result property="no" 		column="no" />
		<result property="email" 		column="email" />
		<result property="nick" 		column="nick" />
		<result property="category" 		column="category" />
		<result property="startRow" 		column="startRow" />
		<result property="endRow" 		column="endRow" />
	</resultMap>

	<select id="selectNum" resultType="int">
		select nvl(max(d_no),0)+1 from donate
	</select>
	<insert id="mdoReqInsert" parameterType="donate">
		insert into donate
		values
		(#{d_no},#{d_title},#{d_member},sysdate,#{d_content},#{d_plan},#{d_amount},#{d_bank},
			#{d_account},#{d_img},'n',#{d_start_date},#{d_end_date})
	</insert>
	<select id="mdoList" resultMap="DonateResult">
		select * from donate where d_member>0 and d_member=#{d_member} order by d_reg_date desc
	</select>
	<select id="selectOne" resultType="donate" parameterType="int">
		select * from donate where d_no=#{d_no}
	</select>
	<update id="mdoUpdate" parameterType="donate">
			update donate set d_title=#{d_title},d_content=#{d_content},d_plan=#{d_plan},
			d_amount=#{d_amount},d_bank=#{d_bank},d_account=#{d_account},d_img=#{d_img},
     d_start_date = to_date(#{d_start_date},'yy/MM/dd'),d_end_date=to_date(#{d_end_date},'yy/MM/dd') where d_no=#{d_no}
	</update>
	<delete id ="mdoDelete" parameterType="int" >
		delete from donate where d_no=#{d_no}
	</delete>
	<select id="odoList" resultMap="DonateResult">
		select * from donate where d_member<![CDATA[<]]>0 and d_member=#{d_member} order by d_reg_date desc
	</select>
	<insert id="odoReqInsert" parameterType="donate">
		insert into donate
		values
		(#{d_no},#{d_title},#{d_member},sysdate,#{d_content},#{d_plan},#{d_amount},#{d_bank},
			#{d_account},#{d_img},'n',#{d_start_date},#{d_end_date})
	</insert>
	<update id="odoUpdate" parameterType="donate">
			update donate set d_title=#{d_title},d_content=#{d_content},d_plan=#{d_plan},
			d_amount=#{d_amount},d_bank=#{d_bank},d_account=#{d_account},d_img=#{d_img},
     d_start_date = to_date(#{d_start_date},'yy/MM/dd'),d_end_date=to_date(#{d_end_date},'yy/MM/dd') where d_no=#{d_no}
	</update>
	<delete id ="odoDelete" parameterType="int" >
		delete from donate where d_no=#{d_no}
	</delete>
	<select id="count" parameterType="donate" resultType="int">
		select count(*) from donate <if test ="d_member!=1">where d_member=#{d_member}</if>
	</select>
	<select id="adList" resultMap="DonateResult">
		select d.*, a.no as no, a.email as email, a.nick as nick, a.job as category from donate d, 
			(select m_no as no, m_email as email, m_nick as nick, m_job as job, m_del_yn as del_yn from member where m_del_yn='n' 
			union select o_no, o_email, o_oname, o_category, o_del_yn from organ where o_del_yn='n') 
			a where d.d_member=a.no order by d_reg_date desc
	</select>
	<update id="adUpdate" parameterType="int">
		update donate set d_approve='y' where d_no=#{d_no}
	</update>
		<update id="adDelete" parameterType="int">
		update donate set d_approve='n' where d_no=#{d_no}
	</update>
	<select id="doList" resultMap="DonateResult">
		select d.*, a.no as no, a.email as email, a.nick as nick, a.job as category from donate d, 
			(select m_no as no, m_email as email, m_nick as nick, m_job as job, m_del_yn as del_yn from member where m_del_yn='n' 
			union select o_no, o_email, o_oname, o_category, o_del_yn from organ where o_del_yn='n') 
			a where d.d_member=a.no and d_approve='y' order by d_reg_date desc
	</select>
	<select id="getTotal" parameterType="donate" resultType="int">
		select count(*) from donate <if test="d_member != 1"> where d_member=#{d_member}</if>
	</select>
</mapper>